<?php
/**
 * PluginSetApiTest
 * PHP version 8.1
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck\Test\Api;

use ck\Configuration;
use ck\ApiException;
use ck\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PluginSetApiTest Class Doc Comment
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PluginSetApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restPluginSetsGet
     *
     * List all Sets.
     *
     */
    public function testRestPluginSetsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsNewGitPluginDetailsPluginNameGet
     *
     * get git plugin description data.
     *
     */
    public function testRestPluginSetsNewGitPluginDetailsPluginNameGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsNewPluginDetailsPluginNameVariationIdGet
     *
     * get plugin description data.
     *
     */
    public function testRestPluginSetsNewPluginDetailsPluginNameVariationIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsPluginSetIdLanguagesCsvLanguageCodeGet
     *
     * List all plugin translations csv..
     *
     */
    public function testRestPluginSetsPluginSetIdLanguagesCsvLanguageCodeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsPluginSetIdLanguagesGet
     *
     * List all the plugins translations for a plugin set.
     *
     */
    public function testRestPluginSetsPluginSetIdLanguagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsPluginSetIdLanguagesTargetLanguageGet
     *
     * List all plugin translations merged..
     *
     */
    public function testRestPluginSetsPluginSetIdLanguagesTargetLanguageGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsPluginSetIdLanguagesTargetLanguagePost
     *
     * Update all plugin translations.
     *
     */
    public function testRestPluginSetsPluginSetIdLanguagesTargetLanguagePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsPost
     *
     * Create a Set.
     *
     */
    public function testRestPluginSetsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsPreviewHashGet
     *
     * Get the preview hash for a set.
     *
     */
    public function testRestPluginSetsPreviewHashGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsS3InboxOpensourcePluginsGet
     *
     * .
     *
     */
    public function testRestPluginSetsS3InboxOpensourcePluginsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdDelete
     *
     * Delete a set.
     *
     */
    public function testRestPluginSetsSetIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdGet
     *
     * Get a set.
     *
     */
    public function testRestPluginSetsSetIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsGet
     *
     * List all Plugins of Set.
     *
     */
    public function testRestPluginSetsSetIdPluginsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsGetCompatibilityPluginNameVariationIdGet
     *
     * .
     *
     */
    public function testRestPluginSetsSetIdPluginsGetCompatibilityPluginNameVariationIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsPluginIdDelete
     *
     * Remove a plugin from a set.
     *
     */
    public function testRestPluginSetsSetIdPluginsPluginIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsPluginIdInstallGitPluginPost
     *
     * Install a git plugin into a set.
     *
     */
    public function testRestPluginSetsSetIdPluginsPluginIdInstallGitPluginPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsPluginIdPost
     *
     * Add a plugin to a set.
     *
     */
    public function testRestPluginSetsSetIdPluginsPluginIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsPluginIdPut
     *
     * Change a plugin's 'active' status for a set..
     *
     */
    public function testRestPluginSetsSetIdPluginsPluginIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsPluginIdSetPositionPost
     *
     * Set a plugin's position in a set.
     *
     */
    public function testRestPluginSetsSetIdPluginsPluginIdSetPositionPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPluginsSearchGet
     *
     * Search plugins.
     *
     */
    public function testRestPluginSetsSetIdPluginsSearchGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdPut
     *
     * Update a set.
     *
     */
    public function testRestPluginSetsSetIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginSetsSetIdSetEntriesGet
     *
     * List all SetEntries of Set.
     *
     */
    public function testRestPluginSetsSetIdSetEntriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restPluginsPluginSetsPluginSetIdPluginsGet
     *
     * List all Plugins of Set.
     *
     */
    public function testRestPluginsPluginSetsPluginSetIdPluginsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
