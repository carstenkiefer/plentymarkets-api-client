<?php
/**
 * ItemApiTest
 * PHP version 8.1
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck\Test\Api;

use ck\Configuration;
use ck\ApiException;
use ck\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ItemApiTest Class Doc Comment
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ItemApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restAvailabilitiesGet
     *
     * List item availabilities.
     *
     */
    public function testRestAvailabilitiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restAvailabilitiesIdGet
     *
     * Get an item availability.
     *
     */
    public function testRestAvailabilitiesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restAvailabilitiesIdPut
     *
     * Update an item availability.
     *
     */
    public function testRestAvailabilitiesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsDelete
     *
     * Delete item sets.
     *
     */
    public function testRestItemSetsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsGet
     *
     * List item sets.
     *
     */
    public function testRestItemSetsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsIdDelete
     *
     * Delete an item set.
     *
     */
    public function testRestItemSetsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsIdGet
     *
     * Get an item set.
     *
     */
    public function testRestItemSetsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsIdPut
     *
     * Update an item set.
     *
     */
    public function testRestItemSetsIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsPost
     *
     * Create item sets.
     *
     */
    public function testRestItemSetsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsPut
     *
     * Update item sets.
     *
     */
    public function testRestItemSetsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdComponentsDelete
     *
     * Delete item set components.
     *
     */
    public function testRestItemSetsSetIdComponentsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdComponentsGet
     *
     * List item set components of an item set.
     *
     */
    public function testRestItemSetsSetIdComponentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdComponentsIdDelete
     *
     * Delete an item set component.
     *
     */
    public function testRestItemSetsSetIdComponentsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdComponentsIdGet
     *
     * Get an item set component.
     *
     */
    public function testRestItemSetsSetIdComponentsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdComponentsIdPut
     *
     * Update an item set component.
     *
     */
    public function testRestItemSetsSetIdComponentsIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdComponentsPost
     *
     * Create item set components.
     *
     */
    public function testRestItemSetsSetIdComponentsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdComponentsPut
     *
     * Update item set components.
     *
     */
    public function testRestItemSetsSetIdComponentsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdConfigGet
     *
     * Get the item set configuration of an item set.
     *
     */
    public function testRestItemSetsSetIdConfigGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemSetsSetIdConfigPut
     *
     * Update an item set configuration.
     *
     */
    public function testRestItemSetsSetIdConfigPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributeValuesValueIdNamesGet
     *
     * Get name and language for an attribute value ID.
     *
     */
    public function testRestItemsAttributeValuesValueIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributeValuesValueIdNamesLangDelete
     *
     * Delete an attribute value name.
     *
     */
    public function testRestItemsAttributeValuesValueIdNamesLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributeValuesValueIdNamesLangGet
     *
     * Get an attribute value name.
     *
     */
    public function testRestItemsAttributeValuesValueIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributeValuesValueIdNamesLangPut
     *
     * Update an attribute value name.
     *
     */
    public function testRestItemsAttributeValuesValueIdNamesLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributeValuesValueIdNamesPost
     *
     * Create an attribute value name.
     *
     */
    public function testRestItemsAttributeValuesValueIdNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdMarketsMarketIdMapsDelete
     *
     * Deletes an attribute map..
     *
     */
    public function testRestItemsAttributesAttributeIdMarketsMarketIdMapsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdMarketsMarketIdMapsGet
     *
     * Gets an attribute map..
     *
     */
    public function testRestItemsAttributesAttributeIdMarketsMarketIdMapsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdMarketsMarketIdMapsPut
     *
     * Updates an attribute map..
     *
     */
    public function testRestItemsAttributesAttributeIdMarketsMarketIdMapsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdNamesGet
     *
     * Get an attribute name.
     *
     */
    public function testRestItemsAttributesAttributeIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdNamesLangDelete
     *
     * Delete an attribute name.
     *
     */
    public function testRestItemsAttributesAttributeIdNamesLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdNamesLangGet
     *
     * List attribute names.
     *
     */
    public function testRestItemsAttributesAttributeIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdNamesLangPut
     *
     * Update an attribute name.
     *
     */
    public function testRestItemsAttributesAttributeIdNamesLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdNamesPost
     *
     * Create an attribute name.
     *
     */
    public function testRestItemsAttributesAttributeIdNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValueMarketNamesGet
     *
     * Search attribute value market names.
     *
     */
    public function testRestItemsAttributesAttributeIdValueMarketNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValueMarketNamesPost
     *
     * Create an attribute value market name.
     *
     */
    public function testRestItemsAttributesAttributeIdValueMarketNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValueMarketNamesValueIdLangReferenceTypeDelete
     *
     * Delete an attribute value market name.
     *
     */
    public function testRestItemsAttributesAttributeIdValueMarketNamesValueIdLangReferenceTypeDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValueMarketNamesValueIdLangReferenceTypePut
     *
     * Update an attribute value market name.
     *
     */
    public function testRestItemsAttributesAttributeIdValueMarketNamesValueIdLangReferenceTypePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesAttributeValueIdMarketsMarketIdMapsDelete
     *
     * Deletes an attribute value map..
     *
     */
    public function testRestItemsAttributesAttributeIdValuesAttributeValueIdMarketsMarketIdMapsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesAttributeValueIdMarketsMarketIdMapsGet
     *
     * Gets an attribute value map..
     *
     */
    public function testRestItemsAttributesAttributeIdValuesAttributeValueIdMarketsMarketIdMapsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesAttributeValueIdMarketsMarketIdMapsPut
     *
     * Updates an attribute value map..
     *
     */
    public function testRestItemsAttributesAttributeIdValuesAttributeValueIdMarketsMarketIdMapsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesGet
     *
     * List attribute values.
     *
     */
    public function testRestItemsAttributesAttributeIdValuesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesIdDelete
     *
     * Delete an attribute value.
     *
     */
    public function testRestItemsAttributesAttributeIdValuesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesIdGet
     *
     * Get an attribute value.
     *
     */
    public function testRestItemsAttributesAttributeIdValuesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesIdPut
     *
     * Update an attribute value.
     *
     */
    public function testRestItemsAttributesAttributeIdValuesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesAttributeIdValuesPost
     *
     * Create an attribute value.
     *
     */
    public function testRestItemsAttributesAttributeIdValuesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesGet
     *
     * List attributes.
     *
     */
    public function testRestItemsAttributesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesIdDelete
     *
     * Delete an attribute.
     *
     */
    public function testRestItemsAttributesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesIdGet
     *
     * Get an attribute.
     *
     */
    public function testRestItemsAttributesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesIdPut
     *
     * Update an attribute.
     *
     */
    public function testRestItemsAttributesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesMapsGet
     *
     * Lists all attribute maps..
     *
     */
    public function testRestItemsAttributesMapsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesMarketsMapsPost
     *
     * Creates a new attribute map..
     *
     */
    public function testRestItemsAttributesMarketsMapsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesPost
     *
     * Create an attribute.
     *
     */
    public function testRestItemsAttributesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesValuesMapsGet
     *
     * Lists all attribute value maps..
     *
     */
    public function testRestItemsAttributesValuesMapsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsAttributesValuesMarketsMapsPost
     *
     * Creates a new attribute value map..
     *
     */
    public function testRestItemsAttributesValuesMarketsMapsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesBarcodeIdDelete
     *
     * Delete a barcode.
     *
     */
    public function testRestItemsBarcodesBarcodeIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesBarcodeIdGet
     *
     * Get a barcode.
     *
     */
    public function testRestItemsBarcodesBarcodeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesBarcodeIdPut
     *
     * Update a barcode.
     *
     */
    public function testRestItemsBarcodesBarcodeIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesBarcodeIdReferrerPost
     *
     * Activate a referrer.
     *
     */
    public function testRestItemsBarcodesBarcodeIdReferrerPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesBarcodeIdReferrerReferrerIdDelete
     *
     * Deactivate a referrer.
     *
     */
    public function testRestItemsBarcodesBarcodeIdReferrerReferrerIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesGet
     *
     * List barcodes.
     *
     */
    public function testRestItemsBarcodesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesPost
     *
     * Create a barcode.
     *
     */
    public function testRestItemsBarcodesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesReferrerReferrerIdGet
     *
     * List barcodes by referrer.
     *
     */
    public function testRestItemsBarcodesReferrerReferrerIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsBarcodesTypeTypeGet
     *
     * List barcodes by type.
     *
     */
    public function testRestItemsBarcodesTypeTypeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsGet
     *
     * Search item.
     *
     */
    public function testRestItemsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesAttributeValueMarketsGet
     *
     * List attribute value image link.
     *
     */
    public function testRestItemsIdImagesAttributeValueMarketsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesGet
     *
     * List images of an item.
     *
     */
    public function testRestItemsIdImagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdAttributeValueMarketsPost
     *
     * Create an attribute value image link.
     *
     */
    public function testRestItemsIdImagesImageIdAttributeValueMarketsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdAttributeValueMarketsValueIdDelete
     *
     * Delete an attribute value image link.
     *
     */
    public function testRestItemsIdImagesImageIdAttributeValueMarketsValueIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdAttributeValueMarketsValueIdGet
     *
     * Get an attribute value image link.
     *
     */
    public function testRestItemsIdImagesImageIdAttributeValueMarketsValueIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdAttributeValueMarketsValueIdPut
     *
     * Update an attribute value image link.
     *
     */
    public function testRestItemsIdImagesImageIdAttributeValueMarketsValueIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdAvailabilitiesDelete
     *
     * Delete an availability.
     *
     */
    public function testRestItemsIdImagesImageIdAvailabilitiesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdAvailabilitiesGet
     *
     * List availabilities.
     *
     */
    public function testRestItemsIdImagesImageIdAvailabilitiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdAvailabilitiesPost
     *
     * Create an availability.
     *
     */
    public function testRestItemsIdImagesImageIdAvailabilitiesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdDelete
     *
     * Delete an image.
     *
     */
    public function testRestItemsIdImagesImageIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdGet
     *
     * Get an image.
     *
     */
    public function testRestItemsIdImagesImageIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdNamesGet
     *
     * List names of an image.
     *
     */
    public function testRestItemsIdImagesImageIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdNamesLangDelete
     *
     * Delete an image name.
     *
     */
    public function testRestItemsIdImagesImageIdNamesLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdNamesLangGet
     *
     * Get an image name.
     *
     */
    public function testRestItemsIdImagesImageIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdNamesLangPut
     *
     * Update an image name.
     *
     */
    public function testRestItemsIdImagesImageIdNamesLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdNamesPost
     *
     * Create an image name.
     *
     */
    public function testRestItemsIdImagesImageIdNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdPut
     *
     * Update an image.
     *
     */
    public function testRestItemsIdImagesImageIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesImageIdVariationImagesGet
     *
     * List image links of an image.
     *
     */
    public function testRestItemsIdImagesImageIdVariationImagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdImagesUploadPost
     *
     * Upload a new image.
     *
     */
    public function testRestItemsIdImagesUploadPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdItemCrossSellingCrossItemIdDelete
     *
     * Delete a cross-selling link.
     *
     */
    public function testRestItemsIdItemCrossSellingCrossItemIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdItemCrossSellingGet
     *
     * List cross-selling links.
     *
     */
    public function testRestItemsIdItemCrossSellingGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdItemCrossSellingPost
     *
     * Create a cross-selling link.
     *
     */
    public function testRestItemsIdItemCrossSellingPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationImagesGet
     *
     * List image links of an item.
     *
     */
    public function testRestItemsIdVariationImagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdDescriptionsGet
     *
     * List texts.
     *
     */
    public function testRestItemsIdVariationsVariationIdDescriptionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdDescriptionsLangDelete
     *
     * Delete texts.
     *
     */
    public function testRestItemsIdVariationsVariationIdDescriptionsLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdDescriptionsLangGet
     *
     * Get texts.
     *
     */
    public function testRestItemsIdVariationsVariationIdDescriptionsLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdDescriptionsLangPut
     *
     * Update texts.
     *
     */
    public function testRestItemsIdVariationsVariationIdDescriptionsLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdDescriptionsPost
     *
     * Create texts.
     *
     */
    public function testRestItemsIdVariationsVariationIdDescriptionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdImagesGet
     *
     * List images of a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdImagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdLabelsPost
     *
     * Get a variation label.
     *
     */
    public function testRestItemsIdVariationsVariationIdLabelsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdMarketIdentNumbersGet
     *
     * List ident number of a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdMarketIdentNumbersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdMarketIdentNumbersMarketIdentNumberIdDelete
     *
     * Deletes a market ident number.
     *
     */
    public function testRestItemsIdVariationsVariationIdMarketIdentNumbersMarketIdentNumberIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdMarketIdentNumbersMarketIdentNumberIdGet
     *
     * Get a market ident number.
     *
     */
    public function testRestItemsIdVariationsVariationIdMarketIdentNumbersMarketIdentNumberIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdMarketIdentNumbersMarketIdentNumberIdPut
     *
     * Updates a market ident number.
     *
     */
    public function testRestItemsIdVariationsVariationIdMarketIdentNumbersMarketIdentNumberIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdMarketIdentNumbersPost
     *
     * Create a market ident number.
     *
     */
    public function testRestItemsIdVariationsVariationIdMarketIdentNumbersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdStockBookIncomingItemsPut
     *
     * Book incoming stock.
     *
     */
    public function testRestItemsIdVariationsVariationIdStockBookIncomingItemsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdStockBookOutgoingItemsPut
     *
     * Book outgoing stock.
     *
     */
    public function testRestItemsIdVariationsVariationIdStockBookOutgoingItemsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdStockCorrectionPut
     *
     * Correct stock.
     *
     */
    public function testRestItemsIdVariationsVariationIdStockCorrectionPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdStockGet
     *
     * List stock of a variation per warehouse.
     *
     */
    public function testRestItemsIdVariationsVariationIdStockGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdStockMovementsGet
     *
     * List stock movements.
     *
     */
    public function testRestItemsIdVariationsVariationIdStockMovementsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdStockRedistributePut
     *
     * Redistribute stock.
     *
     */
    public function testRestItemsIdVariationsVariationIdStockRedistributePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdStockStorageLocationsGet
     *
     * List stock of a variation per storage locations.
     *
     */
    public function testRestItemsIdVariationsVariationIdStockStorageLocationsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationAdditionalSkusAdditionalSkuIdDelete
     *
     * Delete an additional SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationAdditionalSkusAdditionalSkuIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationAdditionalSkusAdditionalSkuIdGet
     *
     * Gets an additional SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationAdditionalSkusAdditionalSkuIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationAdditionalSkusAdditionalSkuIdPut
     *
     * Update an additional SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationAdditionalSkusAdditionalSkuIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationAdditionalSkusGet
     *
     * List additional SKUs.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationAdditionalSkusGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationAdditionalSkusPost
     *
     * Create an additional SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationAdditionalSkusPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBarcodesBarcodeIdDelete
     *
     * Delete a variation barcode.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBarcodesBarcodeIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBarcodesBarcodeIdGet
     *
     * Get a variation barcode.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBarcodesBarcodeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBarcodesBarcodeIdPut
     *
     * Update a variation barcode.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBarcodesBarcodeIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBarcodesGet
     *
     * List variation barcodes.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBarcodesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBarcodesPost
     *
     * Create a variation barcode.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBarcodesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBundlesBundleIdDelete
     *
     * Remove a bundle component.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBundlesBundleIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBundlesBundleIdGet
     *
     * Get a variation bundle.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBundlesBundleIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBundlesBundleIdPut
     *
     * Update a variation bundle.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBundlesBundleIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBundlesGet
     *
     * List bundle components.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBundlesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationBundlesPost
     *
     * Add a variation to a bundle.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationBundlesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationCategoriesCatIdDelete
     *
     * Remove a category from a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationCategoriesCatIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationCategoriesCatIdGet
     *
     * Get link between category and variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationCategoriesCatIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationCategoriesCatIdPut
     *
     * Update variation category link.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationCategoriesCatIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationCategoriesGet
     *
     * List categories linked to a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationCategoriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationCategoriesPost
     *
     * Link a category to a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationCategoriesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationClientsGet
     *
     * List clients linked to a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationClientsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationClientsPlentyIdDelete
     *
     * Unlink a client from a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationClientsPlentyIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationClientsPost
     *
     * Link a client to a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationClientsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationComponentBundlesGet
     *
     * List bundles.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationComponentBundlesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationDefaultCategoriesGet
     *
     * List default category links.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationDefaultCategoriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationDefaultCategoriesPlentyIdDelete
     *
     * Delete a default category link.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationDefaultCategoriesPlentyIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationDefaultCategoriesPlentyIdGet
     *
     * Gets a default category link.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationDefaultCategoriesPlentyIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationDefaultCategoriesPost
     *
     * Create a default category link.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationDefaultCategoriesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationImagesGet
     *
     * List image links of a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationImagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationImagesImageIdDelete
     *
     * Delete an image link.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationImagesImageIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationImagesPost
     *
     * Create an image link.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationImagesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationMarketsDelete
     *
     * Delete all market links of one variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationMarketsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationMarketsGet
     *
     * List markets linked to a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationMarketsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationMarketsMarketplaceIdDelete
     *
     * Delete link between variation and market.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationMarketsMarketplaceIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationMarketsPost
     *
     * Create link between variation and market.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationMarketsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationPropertiesDelete
     *
     * Deletes all links between a variation and its property values.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationPropertiesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationPropertiesGet
     *
     * List property values linked to a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationPropertiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationPropertiesPost
     *
     * Create link between variation and property value.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationPropertiesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationPropertiesPropertyIdDelete
     *
     * Delete link between variation and property value.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationPropertiesPropertyIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationPropertiesPropertyIdGet
     *
     * Get a property value.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationPropertiesPropertyIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationPropertiesPropertyIdPut
     *
     * Update a property value.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationPropertiesPropertyIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSalesPricesDelete
     *
     * Delete all links between a variation and its sales prices.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSalesPricesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSalesPricesGet
     *
     * List sales prices of a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSalesPricesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSalesPricesPost
     *
     * Create link between variation and sales price.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSalesPricesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSalesPricesPriceIdDelete
     *
     * Delete link between variation and sales price.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSalesPricesPriceIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSalesPricesPriceIdGet
     *
     * Get sales price data for a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSalesPricesPriceIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSalesPricesPriceIdPut
     *
     * Update sales price data.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSalesPricesPriceIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSkusGet
     *
     * List SKUs.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSkusGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSkusPost
     *
     * Create an SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSkusPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSkusSkuIdDelete
     *
     * Delete an SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSkusSkuIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSkusSkuIdGet
     *
     * Get an SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSkusSkuIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSkusSkuIdPut
     *
     * Update an SKU.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSkusSkuIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSuppliersGet
     *
     * Lists suppliers for a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSuppliersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSuppliersPost
     *
     * Create a link between variation and supplier.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSuppliersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSuppliersVariationSupplierIdDelete
     *
     * Delete link between variation and supplier.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSuppliersVariationSupplierIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSuppliersVariationSupplierIdGet
     *
     * Get supplier data for a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSuppliersVariationSupplierIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationSuppliersVariationSupplierIdPut
     *
     * Updates supplier data for a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationSuppliersVariationSupplierIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationWarehousesGet
     *
     * List the warehouses linked to a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationWarehousesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationWarehousesPost
     *
     * Create link between a variation and a warehouse.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationWarehousesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationWarehousesWarehouseIdDelete
     *
     * Delete link between a warehouse and a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationWarehousesWarehouseIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationWarehousesWarehouseIdGet
     *
     * Get warehouse data for a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationWarehousesWarehouseIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsIdVariationsVariationIdVariationWarehousesWarehouseIdPut
     *
     * Update warehouse data of a variation.
     *
     */
    public function testRestItemsIdVariationsVariationIdVariationWarehousesWarehouseIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdDelete
     *
     * Delete an item.
     *
     */
    public function testRestItemsItemIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdFillPost
     *
     * Fill item to es.
     *
     */
    public function testRestItemsItemIdFillPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdGet
     *
     * Show an item.
     *
     */
    public function testRestItemsItemIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdItemShippingProfilesDelete
     *
     * Deactivate shipping profiles of an item.
     *
     */
    public function testRestItemsItemIdItemShippingProfilesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdItemShippingProfilesGet
     *
     * List shipping profiles of an item.
     *
     */
    public function testRestItemsItemIdItemShippingProfilesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdItemShippingProfilesIdDelete
     *
     * Deactivate a shipping profile.
     *
     */
    public function testRestItemsItemIdItemShippingProfilesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdItemShippingProfilesPost
     *
     * Activate a shipping profile.
     *
     */
    public function testRestItemsItemIdItemShippingProfilesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdPut
     *
     * Update a item.
     *
     */
    public function testRestItemsItemIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsGet
     *
     * List variations of an item.
     *
     */
    public function testRestItemsItemIdVariationsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsPost
     *
     * Create a variation.
     *
     */
    public function testRestItemsItemIdVariationsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdDelete
     *
     * Delete a variation.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdFillPost
     *
     * Fill a variation.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdFillPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdGet
     *
     * Get a variation.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdPut
     *
     * Update a variation.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsGet
     *
     * Get property value texts.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsLangDelete
     *
     * Delete property value text by language.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsLangGet
     *
     * Get property value text by language.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsLangPut
     *
     * Update property value text by language.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsPost
     *
     * Create property value text by language.
     *
     */
    public function testRestItemsItemIdVariationsVariationIdVariationPropertiesPropertyIdTextsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemShippingProfilesGet
     *
     * List all shipping profiles of all items.
     *
     */
    public function testRestItemsItemShippingProfilesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsItemShippingProfilesPost
     *
     * Bulk activate shipping profiles.
     *
     */
    public function testRestItemsItemShippingProfilesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsLabelsGet
     *
     * List item label templates.
     *
     */
    public function testRestItemsLabelsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersGet
     *
     * List manufacturers.
     *
     */
    public function testRestItemsManufacturersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdCommissionsGet
     *
     * List commissions.
     *
     */
    public function testRestItemsManufacturersIdCommissionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdCommissionsManufacturerIdDelete
     *
     * Delete a commission.
     *
     */
    public function testRestItemsManufacturersIdCommissionsManufacturerIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdCommissionsManufacturerIdGet
     *
     * Get a commission.
     *
     */
    public function testRestItemsManufacturersIdCommissionsManufacturerIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdCommissionsManufacturerIdPut
     *
     * Update a commission.
     *
     */
    public function testRestItemsManufacturersIdCommissionsManufacturerIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdCommissionsPost
     *
     * Create a commission.
     *
     */
    public function testRestItemsManufacturersIdCommissionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdDelete
     *
     * Delete a manufacturer.
     *
     */
    public function testRestItemsManufacturersIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdGet
     *
     * Get a manufacturer.
     *
     */
    public function testRestItemsManufacturersIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersIdPut
     *
     * Update a manufacturer.
     *
     */
    public function testRestItemsManufacturersIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsManufacturersPost
     *
     * Create a manufacturer.
     *
     */
    public function testRestItemsManufacturersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPackingUnitsGet
     *
     * Get the item variation packing units.
     *
     */
    public function testRestItemsPackingUnitsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPackingUnitsIdGet
     *
     * Get the item variation packing unit for a specific given id.
     *
     */
    public function testRestItemsPackingUnitsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPost
     *
     * Create new items.
     *
     */
    public function testRestItemsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesGet
     *
     * List properties.
     *
     */
    public function testRestItemsPropertiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdDelete
     *
     * Delete a property.
     *
     */
    public function testRestItemsPropertiesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdGet
     *
     * Get a property.
     *
     */
    public function testRestItemsPropertiesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdMarketReferencesGet
     *
     * List property market references.
     *
     */
    public function testRestItemsPropertiesIdMarketReferencesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdMarketReferencesMarketIdDelete
     *
     * Delete a property market reference.
     *
     */
    public function testRestItemsPropertiesIdMarketReferencesMarketIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdMarketReferencesMarketIdGet
     *
     * Get a property market reference.
     *
     */
    public function testRestItemsPropertiesIdMarketReferencesMarketIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdMarketReferencesMarketIdPut
     *
     * Update a property market reference.
     *
     */
    public function testRestItemsPropertiesIdMarketReferencesMarketIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdMarketReferencesPost
     *
     * Create a property market reference.
     *
     */
    public function testRestItemsPropertiesIdMarketReferencesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdNamesGet
     *
     * List the property names.
     *
     */
    public function testRestItemsPropertiesIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdNamesLangDelete
     *
     * Delete a property name.
     *
     */
    public function testRestItemsPropertiesIdNamesLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdNamesLangGet
     *
     * Get a property name.
     *
     */
    public function testRestItemsPropertiesIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdNamesLangPut
     *
     * Update a property name.
     *
     */
    public function testRestItemsPropertiesIdNamesLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdNamesPost
     *
     * Create a property name.
     *
     */
    public function testRestItemsPropertiesIdNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesIdPut
     *
     * Update a property.
     *
     */
    public function testRestItemsPropertiesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPost
     *
     * Create a property.
     *
     */
    public function testRestItemsPropertiesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsGet
     *
     * List property selections.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsIdDelete
     *
     * Delete a property selection.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsIdGet
     *
     * Get a property selection.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsIdLangDelete
     *
     * Delete a property selection language.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsIdLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsIdLangGet
     *
     * List property selections by language.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsIdLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsIdLangPut
     *
     * Update a property selection.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsIdLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsIdPost
     *
     * Creates a property selection lang.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsLangGet
     *
     * List property selections.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertiesPropertyIdSelectionsPost
     *
     * Create a property selection.
     *
     */
    public function testRestItemsPropertiesPropertyIdSelectionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsGet
     *
     * List property groups.
     *
     */
    public function testRestItemsPropertyGroupsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdDelete
     *
     * Delete a property group.
     *
     */
    public function testRestItemsPropertyGroupsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdGet
     *
     * Get a property group.
     *
     */
    public function testRestItemsPropertyGroupsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdNamesGet
     *
     * List the property group names of a property group.
     *
     */
    public function testRestItemsPropertyGroupsIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdNamesLangDelete
     *
     * Delete a property group name.
     *
     */
    public function testRestItemsPropertyGroupsIdNamesLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdNamesLangGet
     *
     * Get a property group name in a language.
     *
     */
    public function testRestItemsPropertyGroupsIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdNamesLangPut
     *
     * Update a property group name.
     *
     */
    public function testRestItemsPropertyGroupsIdNamesLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdNamesPost
     *
     * Create a property group name.
     *
     */
    public function testRestItemsPropertyGroupsIdNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsIdPut
     *
     * Update a property group.
     *
     */
    public function testRestItemsPropertyGroupsIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPropertyGroupsPost
     *
     * Create a property group.
     *
     */
    public function testRestItemsPropertyGroupsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsPut
     *
     * Bulk update items.
     *
     */
    public function testRestItemsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesGet
     *
     * List sales prices.
     *
     */
    public function testRestItemsSalesPricesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdAccountsAccountTypeAccountIdDelete
     *
     * Deactivate a referrer account.
     *
     */
    public function testRestItemsSalesPricesIdAccountsAccountTypeAccountIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdAccountsGet
     *
     * List referrer accounts.
     *
     */
    public function testRestItemsSalesPricesIdAccountsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdAccountsPost
     *
     * Activate a referrer account.
     *
     */
    public function testRestItemsSalesPricesIdAccountsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCountriesCountryIdDelete
     *
     * Deactivate a country.
     *
     */
    public function testRestItemsSalesPricesIdCountriesCountryIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCountriesGet
     *
     * List countries by sales price.
     *
     */
    public function testRestItemsSalesPricesIdCountriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCountriesPost
     *
     * Activate a country.
     *
     */
    public function testRestItemsSalesPricesIdCountriesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCurrenciesCurrencyDelete
     *
     * Deactivate a currency.
     *
     */
    public function testRestItemsSalesPricesIdCurrenciesCurrencyDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCurrenciesGet
     *
     * List activated currencies.
     *
     */
    public function testRestItemsSalesPricesIdCurrenciesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCurrenciesPost
     *
     * Activate a currency.
     *
     */
    public function testRestItemsSalesPricesIdCurrenciesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCustomerClassesCustomerClassIdDelete
     *
     * Activate a customer class.
     *
     */
    public function testRestItemsSalesPricesIdCustomerClassesCustomerClassIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCustomerClassesGet
     *
     * List activated customer classes.
     *
     */
    public function testRestItemsSalesPricesIdCustomerClassesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdCustomerClassesPost
     *
     * Activate a customer class.
     *
     */
    public function testRestItemsSalesPricesIdCustomerClassesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdDelete
     *
     * Delete a sales price.
     *
     */
    public function testRestItemsSalesPricesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdGet
     *
     * Get a sales price.
     *
     */
    public function testRestItemsSalesPricesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdNamesGet
     *
     * List names of a sales price.
     *
     */
    public function testRestItemsSalesPricesIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdNamesLangDelete
     *
     * Delete a sales price name.
     *
     */
    public function testRestItemsSalesPricesIdNamesLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdNamesLangGet
     *
     * Gets a sales price name.
     *
     */
    public function testRestItemsSalesPricesIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdNamesLangPut
     *
     * Update a sales price name.
     *
     */
    public function testRestItemsSalesPricesIdNamesLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdNamesPost
     *
     * Create a sales price name.
     *
     */
    public function testRestItemsSalesPricesIdNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdOnlineStoresGet
     *
     * List activated clients (stores).
     *
     */
    public function testRestItemsSalesPricesIdOnlineStoresGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdOnlineStoresPost
     *
     * Activate a client (store).
     *
     */
    public function testRestItemsSalesPricesIdOnlineStoresPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdOnlineStoresWebstoreIdDelete
     *
     * Deactivate a client (store).
     *
     */
    public function testRestItemsSalesPricesIdOnlineStoresWebstoreIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdPut
     *
     * Update a sales price.
     *
     */
    public function testRestItemsSalesPricesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdReferrersGet
     *
     * List activated referrers.
     *
     */
    public function testRestItemsSalesPricesIdReferrersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdReferrersPost
     *
     * Activate a referrer.
     *
     */
    public function testRestItemsSalesPricesIdReferrersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesIdReferrersReferrerIdDelete
     *
     * Deactivates a referrer.
     *
     */
    public function testRestItemsSalesPricesIdReferrersReferrerIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsSalesPricesPost
     *
     * Create a sales price.
     *
     */
    public function testRestItemsSalesPricesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsGet
     *
     * List units.
     *
     */
    public function testRestItemsUnitsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdDelete
     *
     * Delete a unit.
     *
     */
    public function testRestItemsUnitsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdGet
     *
     * Get a unit.
     *
     */
    public function testRestItemsUnitsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdNamesGet
     *
     * List unit names.
     *
     */
    public function testRestItemsUnitsIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdNamesLangDelete
     *
     * Delete a unit name.
     *
     */
    public function testRestItemsUnitsIdNamesLangDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdNamesLangGet
     *
     * Get a unit name.
     *
     */
    public function testRestItemsUnitsIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdNamesLangPut
     *
     * Update a unit name.
     *
     */
    public function testRestItemsUnitsIdNamesLangPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdNamesPost
     *
     * Create a unit name.
     *
     */
    public function testRestItemsUnitsIdNamesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsIdPut
     *
     * Update a unit.
     *
     */
    public function testRestItemsUnitsIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsUnitsPost
     *
     * Create a unit.
     *
     */
    public function testRestItemsUnitsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsGet
     *
     * Search variations.
     *
     */
    public function testRestItemsVariationsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsPut
     *
     * Update up to 50 variations.
     *
     */
    public function testRestItemsVariationsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationCategoriesPost
     *
     * Bulk create category links.
     *
     */
    public function testRestItemsVariationsVariationCategoriesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationCategoriesPut
     *
     * Bulk update category links.
     *
     */
    public function testRestItemsVariationsVariationCategoriesPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationMarketsGet
     *
     * List all links between variations and markets.
     *
     */
    public function testRestItemsVariationsVariationMarketsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationMarketsPost
     *
     * Create up to 50 links between variations and markets.
     *
     */
    public function testRestItemsVariationsVariationMarketsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationPropertiesPost
     *
     * Bulk update properties.
     *
     */
    public function testRestItemsVariationsVariationPropertiesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationPropertiesPut
     *
     * Bulk update properties.
     *
     */
    public function testRestItemsVariationsVariationPropertiesPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationSalesPricesGet
     *
     * Get all sales price relations.
     *
     */
    public function testRestItemsVariationsVariationSalesPricesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationSalesPricesPost
     *
     * Bulk create prices.
     *
     */
    public function testRestItemsVariationsVariationSalesPricesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restItemsVariationsVariationSalesPricesPut
     *
     * Bulk update prices.
     *
     */
    public function testRestItemsVariationsVariationSalesPricesPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
