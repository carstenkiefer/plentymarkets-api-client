<?php
/**
 * OrderApiTest
 * PHP version 8.1
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck\Test\Api;

use ck\Configuration;
use ck\ApiException;
use ck\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrderApiTest Class Doc Comment
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrderApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restDeliveryOrdersOrderIdDelete
     *
     * Delete a delivery order.
     *
     */
    public function testRestDeliveryOrdersOrderIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restDeliveryOrdersOrderIdPut
     *
     * Update a delivery order.
     *
     */
    public function testRestDeliveryOrdersOrderIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restDeliveryOrdersPost
     *
     * Create a delivery order.
     *
     */
    public function testRestDeliveryOrdersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersContactsContactIdGet
     *
     * List orders of a contact.
     *
     */
    public function testRestOrdersContactsContactIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersContactsContactIdMultiOrderPost
     *
     * Create a multi-order.
     *
     */
    public function testRestOrdersContactsContactIdMultiOrderPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCouponsCampaignsCampaignIdCodesPost
     *
     * Create a coupon code.
     *
     */
    public function testRestOrdersCouponsCampaignsCampaignIdCodesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCouponsCampaignsCodesCodeDelete
     *
     * Delete a coupon.
     *
     */
    public function testRestOrdersCouponsCampaignsCodesCodeDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCouponsCampaignsCodesCodeDisabledIsDisabledPut
     *
     * Disable or enable coupon.
     *
     */
    public function testRestOrdersCouponsCampaignsCodesCodeDisabledIsDisabledPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCouponsCampaignsCodesCodeGet
     *
     * Get coupon code information.
     *
     */
    public function testRestOrdersCouponsCampaignsCodesCodeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCouponsCodesContactsContactIdGet
     *
     * List redeemed coupon codes of a contact.
     *
     */
    public function testRestOrdersCouponsCodesContactsContactIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCouponsCodesCouponPost
     *
     * Validate a coupon.
     *
     */
    public function testRestOrdersCouponsCodesCouponPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCouponsCodesPost
     *
     * Validate multiple coupons.
     *
     */
    public function testRestOrdersCouponsCodesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCurrenciesCountriesCountryIdGet
     *
     * Get a currency for a country.
     *
     */
    public function testRestOrdersCurrenciesCountriesCountryIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCurrenciesCurrencyIsoCountriesGet
     *
     * List countries for a currency.
     *
     */
    public function testRestOrdersCurrenciesCurrencyIsoCountriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCurrenciesCurrencyIsoExchangeRateGet
     *
     * Get the exchange rate for a currency.
     *
     */
    public function testRestOrdersCurrenciesCurrencyIsoExchangeRateGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCurrenciesCurrencyIsoGet
     *
     * Get a currency.
     *
     */
    public function testRestOrdersCurrenciesCurrencyIsoGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCurrenciesExchangeRatesFromCurrencyIsoGet
     *
     * Get the exchange rates from a currency.
     *
     */
    public function testRestOrdersCurrenciesExchangeRatesFromCurrencyIsoGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCurrenciesExchangeRatesToCurrencyIsoGet
     *
     * Get the exchange rates to a currency.
     *
     */
    public function testRestOrdersCurrenciesExchangeRatesToCurrencyIsoGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersCurrenciesGet
     *
     * List currencies.
     *
     */
    public function testRestOrdersCurrenciesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDatesTypesGet
     *
     * List order date types.
     *
     */
    public function testRestOrdersDatesTypesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDatesTypesTypeIdGet
     *
     * Find an order date type.
     *
     */
    public function testRestOrdersDatesTypesTypeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDatesTypesTypeIdNamesGet
     *
     * List names of an order date type.
     *
     */
    public function testRestOrdersDatesTypesTypeIdNamesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDatesTypesTypeIdNamesLangGet
     *
     * Get a name of an order date type.
     *
     */
    public function testRestOrdersDatesTypesTypeIdNamesLangGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDocumentsAccountingSummaryGet
     *
     * List document accounting summaries.
     *
     */
    public function testRestOrdersDocumentsAccountingSummaryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersGet
     *
     * Search order.
     *
     */
    public function testRestOrdersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsDatesIdDelete
     *
     * Delete a date of an order item.
     *
     */
    public function testRestOrdersItemsDatesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsDatesIdGet
     *
     * Get date of an order item.
     *
     */
    public function testRestOrdersItemsDatesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsDatesIdPut
     *
     * Update a date of an order item.
     *
     */
    public function testRestOrdersItemsDatesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsDatesPost
     *
     * Create a date for an order item.
     *
     */
    public function testRestOrdersItemsDatesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdBookingPost
     *
     * Book an order item in.
     *
     */
    public function testRestOrdersItemsOrderItemIdBookingPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdDatesGet
     *
     * List all dates of an order item.
     *
     */
    public function testRestOrdersItemsOrderItemIdDatesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdDatesTypeIdDelete
     *
     * Delete a date of an order item by order item and date type.
     *
     */
    public function testRestOrdersItemsOrderItemIdDatesTypeIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdDatesTypeIdGet
     *
     * Get a date of an order item by order item and date type.
     *
     */
    public function testRestOrdersItemsOrderItemIdDatesTypeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdDatesTypeIdPost
     *
     * Create a date for an order item by order item and date type.
     *
     */
    public function testRestOrdersItemsOrderItemIdDatesTypeIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdDatesTypeIdPut
     *
     * Update a date of an order item by order item and date type.
     *
     */
    public function testRestOrdersItemsOrderItemIdDatesTypeIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdPropertiesGet
     *
     * Get all order item properties.
     *
     */
    public function testRestOrdersItemsOrderItemIdPropertiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdPropertiesTypeIdDelete
     *
     * Delete order item property.
     *
     */
    public function testRestOrdersItemsOrderItemIdPropertiesTypeIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdPropertiesTypeIdGet
     *
     * Get order item property.
     *
     */
    public function testRestOrdersItemsOrderItemIdPropertiesTypeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdPropertiesTypeIdPost
     *
     * Create order item property.
     *
     */
    public function testRestOrdersItemsOrderItemIdPropertiesTypeIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdPropertiesTypeIdPut
     *
     * Update order item property.
     *
     */
    public function testRestOrdersItemsOrderItemIdPropertiesTypeIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdTransactionsGet
     *
     * List order item transactions.
     *
     */
    public function testRestOrdersItemsOrderItemIdTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOrderItemIdTransactionsPost
     *
     * Create order item transaction.
     *
     */
    public function testRestOrdersItemsOrderItemIdTransactionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsOutgoingStocksDelete
     *
     * Revert outgoing stock for order items.
     *
     */
    public function testRestOrdersItemsOutgoingStocksDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsPropertiesIdDelete
     *
     * Delete order item property.
     *
     */
    public function testRestOrdersItemsPropertiesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsPropertiesIdGet
     *
     * Get order item property.
     *
     */
    public function testRestOrdersItemsPropertiesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsPropertiesIdPut
     *
     * Update order item property.
     *
     */
    public function testRestOrdersItemsPropertiesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsPropertiesPost
     *
     * Create order item property.
     *
     */
    public function testRestOrdersItemsPropertiesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsTransactionsBookingPost
     *
     * Book order item transactions.
     *
     */
    public function testRestOrdersItemsTransactionsBookingPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsTransactionsGet
     *
     * Search order item transactions.
     *
     */
    public function testRestOrdersItemsTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsTransactionsTransactionIdDelete
     *
     * Delete order item transaction.
     *
     */
    public function testRestOrdersItemsTransactionsTransactionIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersItemsTransactionsTransactionIdPut
     *
     * Update order item transaction.
     *
     */
    public function testRestOrdersItemsTransactionsTransactionIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdBookingPost
     *
     * Book an order in.
     *
     */
    public function testRestOrdersOrderIdBookingPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdCancelPut
     *
     * Cancel an order.
     *
     */
    public function testRestOrdersOrderIdCancelPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdContactWishGet
     *
     * Get a contact wish.
     *
     */
    public function testRestOrdersOrderIdContactWishGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdCouponsCouponPost
     *
     * Redeem a coupon code.
     *
     */
    public function testRestOrdersOrderIdCouponsCouponPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDatesGet
     *
     * List all dates of an order.
     *
     */
    public function testRestOrdersOrderIdDatesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDatesTypeIdGet
     *
     * Get a date.
     *
     */
    public function testRestOrdersOrderIdDatesTypeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDelete
     *
     * Delete an order.
     *
     */
    public function testRestOrdersOrderIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDeliveryOrdersAutomaticPost
     *
     * Create delivery orders automatically for all order items.
     *
     */
    public function testRestOrdersOrderIdDeliveryOrdersAutomaticPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDeliveryOrdersPost
     *
     * Create a delivery order from a parent order.
     *
     */
    public function testRestOrdersOrderIdDeliveryOrdersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdGet
     *
     * Get an order.
     *
     */
    public function testRestOrdersOrderIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdItemsGet
     *
     * Search order items.
     *
     */
    public function testRestOrdersOrderIdItemsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdItemsOrderItemIdDelete
     *
     * Delete an order item.
     *
     */
    public function testRestOrdersOrderIdItemsOrderItemIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdItemsOrderItemIdSerialNumbersGet
     *
     * List serial numbers of an order item.
     *
     */
    public function testRestOrdersOrderIdItemsOrderItemIdSerialNumbersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdItemsSerialNumbersGet
     *
     * List serial numbers of an order.
     *
     */
    public function testRestOrdersOrderIdItemsSerialNumbersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdOutgoingStocksDelete
     *
     * Revert outgoing stock.
     *
     */
    public function testRestOrdersOrderIdOutgoingStocksDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdOutgoingStocksPost
     *
     * Book out order items.
     *
     */
    public function testRestOrdersOrderIdOutgoingStocksPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdPackagenumbersGet
     *
     * List package numbers of an order.
     *
     */
    public function testRestOrdersOrderIdPackagenumbersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdPropertiesPost
     *
     * Create property for an order.
     *
     */
    public function testRestOrdersOrderIdPropertiesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdPropertiesTypeIdDelete
     *
     * Delete property of an order by order ID and property type ID.
     *
     */
    public function testRestOrdersOrderIdPropertiesTypeIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdPropertiesTypeIdPut
     *
     * Update property of an order by order ID and property ID.
     *
     */
    public function testRestOrdersOrderIdPropertiesTypeIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdPut
     *
     * Update an order.
     *
     */
    public function testRestOrdersOrderIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingCancelShipmentDelete
     *
     * Cancel a shipment.
     *
     */
    public function testRestOrdersOrderIdShippingCancelShipmentDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesDelete
     *
     * Delete all order shipping packages for an order.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesGet
     *
     * List order shipping packages.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesItemsGet
     *
     * List items contained in packages of an order.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesItemsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesOrderShippingPackageIdDelete
     *
     * Delete an order shipping package.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesOrderShippingPackageIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesOrderShippingPackageIdGet
     *
     * Get an order shipping package.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesOrderShippingPackageIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesOrderShippingPackageIdPut
     *
     * Update an order shipping package.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesOrderShippingPackageIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesPackedItemsGet
     *
     * List packed items of a shipping package by the order ID.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesPackedItemsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesPost
     *
     * Create an order shipping package.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPackagesUnpackedItemsGet
     *
     * List unpacked items of a shipping package by the order ID.
     *
     */
    public function testRestOrdersOrderIdShippingPackagesUnpackedItemsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPalletsPackagesItemsGet
     *
     * List items contained in package pallets of an order.
     *
     */
    public function testRestOrdersOrderIdShippingPalletsPackagesItemsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPalletsPalletIdPackagesDelete
     *
     * Delete all order shipping packages in a pallet.
     *
     */
    public function testRestOrdersOrderIdShippingPalletsPalletIdPackagesDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPalletsPalletIdPackagesGet
     *
     * List all packages contained in pallets of an order.
     *
     */
    public function testRestOrdersOrderIdShippingPalletsPalletIdPackagesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingPalletsPalletIdPackagesPut
     *
     * Update all packages in a pallet.
     *
     */
    public function testRestOrdersOrderIdShippingPalletsPalletIdPackagesPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingRegisterShipmentPost
     *
     * Register a shipment.
     *
     */
    public function testRestOrdersOrderIdShippingRegisterShipmentPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingShippingInformationAdditionalDataPut
     *
     * Update additional data of the shipping information.
     *
     */
    public function testRestOrdersOrderIdShippingShippingInformationAdditionalDataPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingShippingInformationDelete
     *
     * Delete shipping information.
     *
     */
    public function testRestOrdersOrderIdShippingShippingInformationDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingShippingInformationGet
     *
     * Get shipping information.
     *
     */
    public function testRestOrdersOrderIdShippingShippingInformationGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdShippingShippingInformationStatusPut
     *
     * Update the shipping status of the shipping information.
     *
     */
    public function testRestOrdersOrderIdShippingShippingInformationStatusPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdStatusHistoryGet
     *
     * Get the status history of an order.
     *
     */
    public function testRestOrdersOrderIdStatusHistoryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdTransactionsPost
     *
     * Create order item transactions for an order.
     *
     */
    public function testRestOrdersOrderIdTransactionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPost
     *
     * Create an order.
     *
     */
    public function testRestOrdersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPropertiesIdDelete
     *
     * Delete property of an order by property ID.
     *
     */
    public function testRestOrdersPropertiesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPropertiesIdPut
     *
     * Update property of an order by property ID.
     *
     */
    public function testRestOrdersPropertiesIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPropertiesTypesGet
     *
     * List order property types.
     *
     */
    public function testRestOrdersPropertiesTypesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPropertiesTypesPost
     *
     * Create order property type.
     *
     */
    public function testRestOrdersPropertiesTypesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPropertiesTypesTypeIdDelete
     *
     * Delete property type.
     *
     */
    public function testRestOrdersPropertiesTypesTypeIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPropertiesTypesTypeIdGet
     *
     * Get property type.
     *
     */
    public function testRestOrdersPropertiesTypesTypeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersPropertiesTypesTypeIdPut
     *
     * Update property type.
     *
     */
    public function testRestOrdersPropertiesTypesTypeIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersReferrersGet
     *
     * List referrers.
     *
     */
    public function testRestOrdersReferrersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingCountriesGet
     *
     * List shipping countries.
     *
     */
    public function testRestOrdersShippingCountriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackageTypesGet
     *
     * List shipping package types.
     *
     */
    public function testRestOrdersShippingPackageTypesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackageTypesShippingPackageTypeIdGet
     *
     * Get a shipping package type.
     *
     */
    public function testRestOrdersShippingPackageTypesShippingPackageTypeIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackagesItemsIdDelete
     *
     * Delete package, variation or quantity for an order.
     *
     */
    public function testRestOrdersShippingPackagesItemsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackagesItemsIdPut
     *
     * Update package, variation or quantity for an order.
     *
     */
    public function testRestOrdersShippingPackagesItemsIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackagesItemsPackageIdItemIdVariationIdDelete
     *
     * Delete items of an order package.
     *
     */
    public function testRestOrdersShippingPackagesItemsPackageIdItemIdVariationIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackagesItemsPackageIdItemIdVariationIdPut
     *
     * Update items of an order package.
     *
     */
    public function testRestOrdersShippingPackagesItemsPackageIdItemIdVariationIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackagesPackageIdItemsGet
     *
     * List items of an order package.
     *
     */
    public function testRestOrdersShippingPackagesPackageIdItemsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPackagesPackageIdItemsPost
     *
     * Create package, variation or quantity for an order.
     *
     */
    public function testRestOrdersShippingPackagesPackageIdItemsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPalletsGet
     *
     * List order shipping pallets.
     *
     */
    public function testRestOrdersShippingPalletsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPalletsPalletIdDelete
     *
     * Delete all pallets of an order.
     *
     */
    public function testRestOrdersShippingPalletsPalletIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPalletsPalletIdGet
     *
     * List all pallets of an order.
     *
     */
    public function testRestOrdersShippingPalletsPalletIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPalletsPalletIdPut
     *
     * Update all pallets of an order.
     *
     */
    public function testRestOrdersShippingPalletsPalletIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPalletsPost
     *
     * Create order shipping pallets.
     *
     */
    public function testRestOrdersShippingPalletsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingParcelServiceRegionsParcelServiceRegionIdGet
     *
     * Get an  order parcel service region.
     *
     */
    public function testRestOrdersShippingParcelServiceRegionsParcelServiceRegionIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPresetsGet
     *
     * List shipping profiles.
     *
     */
    public function testRestOrdersShippingPresetsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPresetsPresetIdGet
     *
     * Get a shipping profile.
     *
     */
    public function testRestOrdersShippingPresetsPresetIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingPresetsPresetIdParcelServiceRegionsGet
     *
     * List parcel service regions by parcel service preset ID.
     *
     */
    public function testRestOrdersShippingPresetsPresetIdParcelServiceRegionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingReturnsReturnsServiceProvidersGet
     *
     * List returns service providers.
     *
     */
    public function testRestOrdersShippingReturnsReturnsServiceProvidersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingReturnsReturnsServiceProvidersPluginsGet
     *
     * List returns service provider plugins.
     *
     */
    public function testRestOrdersShippingReturnsReturnsServiceProvidersPluginsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingReturnsReturnsServiceProvidersProviderIdGet
     *
     * Get returns service provider by the ID.
     *
     */
    public function testRestOrdersShippingReturnsReturnsServiceProvidersProviderIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingShippingInformationGet
     *
     * List orders with shipping information.
     *
     */
    public function testRestOrdersShippingShippingInformationGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingShippingInformationPost
     *
     * Create shipping information.
     *
     */
    public function testRestOrdersShippingShippingInformationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingShippingServiceProvidersGet
     *
     * List shipping service providers.
     *
     */
    public function testRestOrdersShippingShippingServiceProvidersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingShippingServiceProvidersPluginsGet
     *
     * List shipping service provider plugins.
     *
     */
    public function testRestOrdersShippingShippingServiceProvidersPluginsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingShippingServiceProvidersPost
     *
     * Save a shipping service provider.
     *
     */
    public function testRestOrdersShippingShippingServiceProvidersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersShippingShippingServiceProvidersShippingServiceProviderIdGet
     *
     * Get a shipping service provider.
     *
     */
    public function testRestOrdersShippingShippingServiceProvidersShippingServiceProviderIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusHistoryGet
     *
     * List status histories of orders.
     *
     */
    public function testRestOrdersStatusHistoryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusesAllGet
     *
     * Get all order statuses.
     *
     */
    public function testRestOrdersStatusesAllGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusesGet
     *
     * Searches for order statuses.
     *
     */
    public function testRestOrdersStatusesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusesGroupFunctionsPost
     *
     * Change order status properties.
     *
     */
    public function testRestOrdersStatusesGroupFunctionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusesPost
     *
     * Creates an order status..
     *
     */
    public function testRestOrdersStatusesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusesStatusIdDelete
     *
     * Delete an order status.
     *
     */
    public function testRestOrdersStatusesStatusIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusesStatusIdGet
     *
     * Get an order status.
     *
     */
    public function testRestOrdersStatusesStatusIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersStatusesStatusIdPut
     *
     * Update an order status.
     *
     */
    public function testRestOrdersStatusesStatusIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restRedistributionsOrderIdDelete
     *
     * Delete a redistribution.
     *
     */
    public function testRestRedistributionsOrderIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restRedistributionsOrderIdPut
     *
     * Update a redistribution.
     *
     */
    public function testRestRedistributionsOrderIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restRedistributionsPost
     *
     * Create a redistribution.
     *
     */
    public function testRestRedistributionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restReordersOrderIdCurrencyPut
     *
     * Update the currency.
     *
     */
    public function testRestReordersOrderIdCurrencyPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restReordersOrderIdDelete
     *
     * Delete a reorder.
     *
     */
    public function testRestReordersOrderIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restReordersOrderIdDeliveryDateGet
     *
     * Get the delivery date.
     *
     */
    public function testRestReordersOrderIdDeliveryDateGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restReordersOrderIdDeliveryDatesPut
     *
     * Calculate and save the delivery dates.
     *
     */
    public function testRestReordersOrderIdDeliveryDatesPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restReordersOrderIdPut
     *
     * Update a reorder.
     *
     */
    public function testRestReordersOrderIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restReordersPost
     *
     * Create a reorder.
     *
     */
    public function testRestReordersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restSystemSettingsTaricVatAssignmentGet
     *
     * List taric vat assignments.
     *
     */
    public function testRestSystemSettingsTaricVatAssignmentGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restSystemSettingsTaricVatAssignmentTaricCodeCountryIdDelete
     *
     * Delete taric vat assignment.
     *
     */
    public function testRestSystemSettingsTaricVatAssignmentTaricCodeCountryIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restSystemSettingsTaricVatAssignmentTaricCodeCountryIdGet
     *
     * Get taric vat assignment.
     *
     */
    public function testRestSystemSettingsTaricVatAssignmentTaricCodeCountryIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restSystemSettingsTaricVatAssignmentTaricCodeCountryIdPost
     *
     * Create taric vat assignment.
     *
     */
    public function testRestSystemSettingsTaricVatAssignmentTaricCodeCountryIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restSystemSettingsTaricVatAssignmentTaricCodeCountryIdPut
     *
     * Update taric vat assignment.
     *
     */
    public function testRestSystemSettingsTaricVatAssignmentTaricCodeCountryIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
