<?php
/**
 * BoardApiTest
 * PHP version 8.1
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck\Test\Api;

use ck\Configuration;
use ck\ApiException;
use ck\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BoardApiTest Class Doc Comment
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BoardApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdDelete
     *
     * Delete column.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdPositionPut
     *
     * Update position of of a column.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdPositionPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdPost
     *
     * Copy column.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdPut
     *
     * Update column.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksGet
     *
     * List all task of a column.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksPost
     *
     * Create task in specific column.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdDelete
     *
     * Delete task.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdGet
     *
     * Get task by ID.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdPositionPut
     *
     * Update task position.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdPositionPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdPost
     *
     * Copy task.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdPut
     *
     * Update task.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdReferencesPost
     *
     * Create reference.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdReferencesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdReferencesReferenceIdDelete
     *
     * Delete reference from a given task.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdReferencesReferenceIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsColumnIdTasksTaskIdReferencesReferenceTypeReferenceKeyGet
     *
     * Check reference key.
     *
     */
    public function testRestBoardsBoardIdColumnsColumnIdTasksTaskIdReferencesReferenceTypeReferenceKeyGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsGet
     *
     * List all columns of a given board.
     *
     */
    public function testRestBoardsBoardIdColumnsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restBoardsBoardIdColumnsPost
     *
     * Create column and assign it to a board.
     *
     */
    public function testRestBoardsBoardIdColumnsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
