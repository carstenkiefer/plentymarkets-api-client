<?php
/**
 * DocumentApiTest
 * PHP version 8.1
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck\Test\Api;

use ck\Configuration;
use ck\ApiException;
use ck\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DocumentApiTest Class Doc Comment
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DocumentApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restCategoriesCategoryIdDocumentsDocumentIdDelete
     *
     * Deletes a category document. The ID of the document must be specified..
     *
     */
    public function testRestCategoriesCategoryIdDocumentsDocumentIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restCategoriesCategoryIdDocumentsDownloadsGet
     *
     * Download category documents.
     *
     */
    public function testRestCategoriesCategoryIdDocumentsDownloadsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restCategoriesCategoryIdDocumentsGet
     *
     * List documents of a category.
     *
     */
    public function testRestCategoriesCategoryIdDocumentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restCategoriesCategoryIdDocumentsPost
     *
     * Upload category documents.
     *
     */
    public function testRestCategoriesCategoryIdDocumentsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restDocumentsDocumentIdGet
     *
     * Download the content of a document.
     *
     */
    public function testRestDocumentsDocumentIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDocumentsDownloadsTypeGet
     *
     * Download documents of a document type.
     *
     */
    public function testRestOrdersDocumentsDownloadsTypeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDocumentsGet
     *
     * List order documents.
     *
     */
    public function testRestOrdersDocumentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersDocumentsTypeGet
     *
     * List documents of a type.
     *
     */
    public function testRestOrdersDocumentsTypeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsCorrectionDocumentGeneratePost
     *
     * Generate adjustment form of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsCorrectionDocumentGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsCreditNoteGeneratePost
     *
     * Generate credit note of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsCreditNoteGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsDeliveryNoteGeneratePost
     *
     * Generate delivery note of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsDeliveryNoteGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsDocumentIdDelete
     *
     * Delete document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsDocumentIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsDunningLetterGeneratePost
     *
     * Generate dunning letter of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsDunningLetterGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsInvoiceGeneratePost
     *
     * Generate invoice of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsInvoiceGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsOfferGeneratePost
     *
     * Generate offer document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsOfferGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsOrderConfirmationGeneratePost
     *
     * Generate order confirmation of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsOrderConfirmationGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsPickupDeliveryGeneratePost
     *
     * Generate pick-up delivery note of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsPickupDeliveryGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsPoDeliveryNoteGeneratePost
     *
     * Generate purchase order (PO) delivery note of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsPoDeliveryNoteGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsProFormaInvoiceGeneratePost
     *
     * Generate pro forma invoice of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsProFormaInvoiceGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsReorderGeneratePost
     *
     * Generate reorder document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsReorderGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsRepairBillGeneratePost
     *
     * Generate repair slip of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsRepairBillGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsReturnNoteGeneratePost
     *
     * Generate return slip of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsReturnNoteGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsReversalDocumentGeneratePost
     *
     * Generate reversal document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsReversalDocumentGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsReversalDunningLetterGeneratePost
     *
     * Generate dunning letter reversal document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsReversalDunningLetterGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsReversalRefundGeneratePost
     *
     * Generate refund reversal document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsReversalRefundGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsSuccessConfirmationGeneratePost
     *
     * Generate success confirmation of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsSuccessConfirmationGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsTypeCurrentGet
     *
     * Get current invoice or credit note of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsTypeCurrentGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsTypeGeneratePost
     *
     * Generate document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsTypeGeneratePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsTypePost
     *
     * Upload order documents.
     *
     */
    public function testRestOrdersOrderIdDocumentsTypePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restOrdersOrderIdDocumentsTypeRecentGet
     *
     * Get most recent document of an order.
     *
     */
    public function testRestOrdersOrderIdDocumentsTypeRecentGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
