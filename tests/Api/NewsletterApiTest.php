<?php
/**
 * NewsletterApiTest
 * PHP version 8.1
 *
 * @package  ck/plenty-client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck/plenty-client\Test\Api;

use ck/plenty-client\Configuration;
use ck/plenty-client\ApiException;
use ck/plenty-client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * NewsletterApiTest Class Doc Comment
 *
 * @package  ck/plenty-client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class NewsletterApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restNewslettersDelete
     *
     * Delete entries.
     *
     */
    public function testRestNewslettersDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersDoubleOptInContactIdPost
     *
     * Send doubleOptIn mail.
     *
     */
    public function testRestNewslettersDoubleOptInContactIdPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersEntryIdDelete
     *
     * Delete entry.
     *
     */
    public function testRestNewslettersEntryIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersEntryIdGet
     *
     * List details of an entry.
     *
     */
    public function testRestNewslettersEntryIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersEntryIdPut
     *
     * Update entry.
     *
     */
    public function testRestNewslettersEntryIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersFoldersDelete
     *
     * Delete folders.
     *
     */
    public function testRestNewslettersFoldersDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersFoldersFolderIdDelete
     *
     * Delete folder.
     *
     */
    public function testRestNewslettersFoldersFolderIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersFoldersFolderIdGet
     *
     * List details of a folder.
     *
     */
    public function testRestNewslettersFoldersFolderIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersFoldersFolderIdPut
     *
     * Update folder.
     *
     */
    public function testRestNewslettersFoldersFolderIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersFoldersFolderIdRecipientsGet
     *
     * List all recipients of a folder.
     *
     */
    public function testRestNewslettersFoldersFolderIdRecipientsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersFoldersGet
     *
     * List newsletter folders.
     *
     */
    public function testRestNewslettersFoldersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersFoldersPost
     *
     * Create folder.
     *
     */
    public function testRestNewslettersFoldersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersGet
     *
     * List newsletter entries.
     *
     */
    public function testRestNewslettersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersListRecipientsGet
     *
     * List recipients.
     *
     */
    public function testRestNewslettersListRecipientsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersPost
     *
     * Create entry.
     *
     */
    public function testRestNewslettersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersRecipientsDelete
     *
     * Delete recipients.
     *
     */
    public function testRestNewslettersRecipientsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersRecipientsGet
     *
     * List recipients of folder.
     *
     */
    public function testRestNewslettersRecipientsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersRecipientsPost
     *
     * Create recipient.
     *
     */
    public function testRestNewslettersRecipientsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersRecipientsRecipientIdDelete
     *
     * Delete recipient.
     *
     */
    public function testRestNewslettersRecipientsRecipientIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersRecipientsRecipientIdGet
     *
     * List recipient.
     *
     */
    public function testRestNewslettersRecipientsRecipientIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restNewslettersRecipientsRecipientIdPut
     *
     * Update recipient.
     *
     */
    public function testRestNewslettersRecipientsRecipientIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
