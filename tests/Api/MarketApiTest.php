<?php
/**
 * MarketApiTest
 * PHP version 8.1
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck\Test\Api;

use ck\Configuration;
use ck\ApiException;
use ck\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MarketApiTest Class Doc Comment
 *
 * @package  ck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MarketApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restMarketsCredentialsCredentialsIdDelete
     *
     * Delete a credential.
     *
     */
    public function testRestMarketsCredentialsCredentialsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsCredentialsCredentialsIdGet
     *
     * Get a credential.
     *
     */
    public function testRestMarketsCredentialsCredentialsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsCredentialsCredentialsIdPut
     *
     * Update a credential.
     *
     */
    public function testRestMarketsCredentialsCredentialsIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsCredentialsGet
     *
     * List credentials.
     *
     */
    public function testRestMarketsCredentialsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsCredentialsPost
     *
     * Create a credential.
     *
     */
    public function testRestMarketsCredentialsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayAuthLoginGet
     *
     * Get the login URL..
     *
     */
    public function testRestMarketsEbayAuthLoginGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayAuthRefreshTokenPut
     *
     * Refresh an expired access token..
     *
     */
    public function testRestMarketsEbayAuthRefreshTokenPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayCategoriesGet
     *
     * List categories.
     *
     */
    public function testRestMarketsEbayCategoriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayCategoriesIdGet
     *
     * Get category.
     *
     */
    public function testRestMarketsEbayCategoriesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayFulfillmentPoliciesIdGet
     *
     * Get fulfillment policy.
     *
     */
    public function testRestMarketsEbayFulfillmentPoliciesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayItemSpecificsGet
     *
     * List item specifics.
     *
     */
    public function testRestMarketsEbayItemSpecificsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayMarketplacesGet
     *
     * Get all eBay marketplaces..
     *
     */
    public function testRestMarketsEbayMarketplacesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayPartsFitmentsFitmentIdDelete
     *
     * Delete a fitment..
     *
     */
    public function testRestMarketsEbayPartsFitmentsFitmentIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayPartsFitmentsFitmentIdGet
     *
     * Get a fitment.
     *
     */
    public function testRestMarketsEbayPartsFitmentsFitmentIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayPartsFitmentsFitmentIdPut
     *
     * Update fitment..
     *
     */
    public function testRestMarketsEbayPartsFitmentsFitmentIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayPartsFitmentsGet
     *
     * List fitments.
     *
     */
    public function testRestMarketsEbayPartsFitmentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayPartsFitmentsPost
     *
     * Create a fitment.
     *
     */
    public function testRestMarketsEbayPartsFitmentsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayPartsFitmentsSearchGet
     *
     * Search fitments.
     *
     */
    public function testRestMarketsEbayPartsFitmentsSearchGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayPaymentPoliciesIdGet
     *
     * Get payment policy.
     *
     */
    public function testRestMarketsEbayPaymentPoliciesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayReturnPoliciesIdGet
     *
     * Get return policy.
     *
     */
    public function testRestMarketsEbayReturnPoliciesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsEbayShopCategoriesGet
     *
     * List all eBay shop categories.
     *
     */
    public function testRestMarketsEbayShopCategoriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsListingsMarketplacesGet
     *
     * Get all listing marketplaces..
     *
     */
    public function testRestMarketsListingsMarketplacesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsBulkPost
     *
     * Create market settings.
     *
     */
    public function testRestMarketsSettingsBulkPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsBulkPut
     *
     * Update market settings.
     *
     */
    public function testRestMarketsSettingsBulkPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsCorrelationsBulkPost
     *
     * Create multiple correlations.
     *
     */
    public function testRestMarketsSettingsCorrelationsBulkPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsCorrelationsGet
     *
     * List correlation.
     *
     */
    public function testRestMarketsSettingsCorrelationsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsCorrelationsPost
     *
     * Create a correlation.
     *
     */
    public function testRestMarketsSettingsCorrelationsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsGet
     *
     * List market settings.
     *
     */
    public function testRestMarketsSettingsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsPost
     *
     * Create market settings.
     *
     */
    public function testRestMarketsSettingsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsSettingIdDelete
     *
     * Delete market settings.
     *
     */
    public function testRestMarketsSettingsSettingIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsSettingIdGet
     *
     * Get market settings.
     *
     */
    public function testRestMarketsSettingsSettingIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restMarketsSettingsSettingIdPut
     *
     * Update market settings.
     *
     */
    public function testRestMarketsSettingsSettingIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
