<?php
/**
 * WarehouseApiTest
 * PHP version 8.1
 *
 * @package  ck/plenty-client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ck/plenty-client\Test\Api;

use ck/plenty-client\Configuration;
use ck/plenty-client\ApiException;
use ck/plenty-client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * WarehouseApiTest Class Doc Comment
 *
 * @package  ck/plenty-client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class WarehouseApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for restWarehousesLayoutsPost
     *
     * Create a warehouse location layout.
     *
     */
    public function testRestWarehousesLayoutsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsAvailabilityWarehouseLocationIdGet
     *
     * Get availability for storage location.
     *
     */
    public function testRestWarehousesLocationsAvailabilityWarehouseLocationIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsDelete
     *
     * Delete multiple warehouse locations.
     *
     */
    public function testRestWarehousesLocationsDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsDetailsGet
     *
     * Get warehouse location details.
     *
     */
    public function testRestWarehousesLocationsDetailsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsDimensionsPost
     *
     * Create a warehouse location dimension.
     *
     */
    public function testRestWarehousesLocationsDimensionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsDimensionsWarehouseLocationDimensionIdDelete
     *
     * Delete a warehouse location dimension.
     *
     */
    public function testRestWarehousesLocationsDimensionsWarehouseLocationDimensionIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsDimensionsWarehouseLocationDimensionIdGet
     *
     * Get a warehouse location dimension.
     *
     */
    public function testRestWarehousesLocationsDimensionsWarehouseLocationDimensionIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsDimensionsWarehouseLocationDimensionIdPut
     *
     * Update a warehouse location dimension.
     *
     */
    public function testRestWarehousesLocationsDimensionsWarehouseLocationDimensionIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsGroupPut
     *
     * Edit the purpose and status for a group of storage locations.
     *
     */
    public function testRestWarehousesLocationsGroupPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsLevelsPositionsPost
     *
     * Move a warehouse location level position.
     *
     */
    public function testRestWarehousesLocationsLevelsPositionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsLevelsPost
     *
     * Create a warehouse location level.
     *
     */
    public function testRestWarehousesLocationsLevelsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsLevelsWarehouseLocationLevelIdDelete
     *
     * Delete a warehouse location level.
     *
     */
    public function testRestWarehousesLocationsLevelsWarehouseLocationLevelIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsLevelsWarehouseLocationLevelIdGet
     *
     * Get a warehouse location level.
     *
     */
    public function testRestWarehousesLocationsLevelsWarehouseLocationLevelIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsLevelsWarehouseLocationLevelIdPut
     *
     * Update a warehouse location level.
     *
     */
    public function testRestWarehousesLocationsLevelsWarehouseLocationLevelIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsMultipleDimensionsPost
     *
     * Create multiple warehouse location dimensions.
     *
     */
    public function testRestWarehousesLocationsMultipleDimensionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsPositionsPost
     *
     * Move a warehouse location position.
     *
     */
    public function testRestWarehousesLocationsPositionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsPost
     *
     * Create a warehouse location.
     *
     */
    public function testRestWarehousesLocationsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsPreviewsPost
     *
     * Generate warehouse location preview and saves it.
     *
     */
    public function testRestWarehousesLocationsPreviewsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsStockWarehouseLocationIdGet
     *
     * List warehouse locations stock.
     *
     */
    public function testRestWarehousesLocationsStockWarehouseLocationIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsWarehouseIdLabelPost
     *
     * Generate the warehouse location label.
     *
     */
    public function testRestWarehousesLocationsWarehouseIdLabelPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsWarehouseLocationIdDelete
     *
     * Delete a warehouse location.
     *
     */
    public function testRestWarehousesLocationsWarehouseLocationIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsWarehouseLocationIdGet
     *
     * Get a warehouse location.
     *
     */
    public function testRestWarehousesLocationsWarehouseLocationIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesLocationsWarehouseLocationIdPut
     *
     * Update a warehouse location.
     *
     */
    public function testRestWarehousesLocationsWarehouseLocationIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesStructureWarehouseIdGet
     *
     * Get a warehouse location structure.
     *
     */
    public function testRestWarehousesStructureWarehouseIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesStructureWarehouseIdMovingGet
     *
     * Get a warehouse location structure moving.
     *
     */
    public function testRestWarehousesStructureWarehouseIdMovingGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesWarehouseIdLocationsDimensionsGet
     *
     * List warehouse location dimensions.
     *
     */
    public function testRestWarehousesWarehouseIdLocationsDimensionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesWarehouseIdLocationsGet
     *
     * List warehouse locations.
     *
     */
    public function testRestWarehousesWarehouseIdLocationsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesWarehouseIdLocationsLevelWarehouseLocationLevelIdGet
     *
     * List warehouse locations by levelId.
     *
     */
    public function testRestWarehousesWarehouseIdLocationsLevelWarehouseLocationLevelIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restWarehousesWarehouseIdLocationsLevelsGet
     *
     * List warehouse location levels.
     *
     */
    public function testRestWarehousesWarehouseIdLocationsLevelsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
